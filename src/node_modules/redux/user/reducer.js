import t from './types'

const ACTION_HANDLERS = {
  [t.SEARCH_REQUEST]: (state, { query: { q } }) => ({
    ...state,
    username: q,
    isLoading: true,
  }),
  [t.SEARCH_REQUEST_SUCCESS]: (state, { items: { data: { items } } }) => ({
    ...state,
    items,
    isLoading: false,
  }),
  [t.SEARCH_REQUEST_ERROR]: (state) => ({
    ...state,
    isLoading: false,
  }),
  [t.ERROR]: (state, { error }) => ({
    ...state,
    error,
  }),
}

const initialState = {
  username: '',
  error: null,
  items: [],
  isLoading: false,
}

export default function reducer(state = initialState, action) {
  const handler = ACTION_HANDLERS[action.type]
  return handler ? handler(state, action) : state
}
